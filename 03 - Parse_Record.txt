def parse_record(record):
    namespace = {"marc" : "http://www.loc.gov/MARC21/slim"}
    xml = etree.fromstring(unicodedata.normalize("NFC", str(record)))
    
    data_list = []

    zeitraum = xml.xpath("marc:datafield[@tag = '363']/marc:subfield[@code = 'i']", namespaces=namespace)        
    
    try:
        zeitraum = zeitraum[0].text
        zeitraum = int(zeitraum[:4])
    except:
        zeitraum = 0
    
    if not zeitraum >= 1945:    
    
        for i in xml.findall("marc:datafield[@tag='924']", namespaces=namespace):

            #IDN
            idn = xml.xpath("marc:controlfield[@tag = '001']", namespaces=namespace)

            try:
                idn = idn[0].text
            except:
                idn = "N.N."

            #Titel        
            titel = xml.xpath("marc:datafield[@tag = '245']/marc:subfield[@code = 'a']", namespaces=namespace)

            try:
                titel = titel[0].text
            except:
                titel = "N.N."

            #Erscheinungsort
            ort = xml.xpath("marc:datafield[@tag = '264']/marc:subfield[@code = 'a']", namespaces=namespace)

            try:
                ort = [angabe.text for angabe in ort]
            except:
                ort = "N.N."

            #Erscheinungsfrequenz
            frequenz = xml.xpath("marc:datafield[@tag = '515']/marc:subfield[@code = 'a']", namespaces=namespace)

            try:
                frequenz = frequenz[0].text
            except:
                frequenz = "N.N."

            #Erscheinungsverlauf
            verlauf = xml.xpath("marc:datafield[@tag = '362']/marc:subfield[@code = 'a']", namespaces=namespace)

            try:
                verlauf = verlauf[0].text
            except:
                verlauf = "N.N."

            #Besitzende Einrichtung        
            einrichtung = i.find("marc:subfield[@code='b']", namespaces=namespace)
            einrichtung = einrichtung.text

            #Materialart
            material = xml.xpath("marc:datafield[@tag = '337']/marc:subfield[@code = 'a']", namespaces=namespace)

            try:
                material = [mat.text for mat in material]
            except:
                material = "N.N."

            #Signatur
            signatur = i.find("marc:subfield[@code = 'g']", namespaces=namespace)

            try:
                signatur = signatur.text
            except:
                signatur = "N.N."

            #Bestand der Einrichtung
            zeit = i.findall("marc:subfield[@code='z']", namespaces=namespace)

            try:
                bestand = [item.text for item in zeit if len(zeit) != 0]

                if bestand == []:
                    zeit1 = i.findall("marc:subfield[@code='q']", namespaces=namespace)
                    zeit2 = i.findall("marc:subfield[@code='v']", namespaces=namespace)

                    bestand1 = [item.text for item in zeit1]
                    bestand2 = [item.text for item in zeit2]

                    bestand = bestand1 + bestand2                    
                    bestand = ["-".join(bestand)]

            except:
                bestand = [""]

            data_list.append([idn, titel, ort, frequenz, verlauf, einrichtung, signatur, bestand, material])
            
    return data_list
